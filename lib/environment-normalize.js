!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("environment-normalize",[],t):"object"==typeof exports?exports["environment-normalize"]=t():e["environment-normalize"]=t()}(this,function(){return function(e){function t(n){if(r[n])return r[n].exports;var a=r[n]={exports:{},id:n,loaded:!1};return e[n].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.constants=t.normalize=void 0;var a=r(1),o=n(a),u=r(3),i=n(u),c=function(){for(var e=arguments.length,t=Array(e>1?e-1:0),r=1;r<e;r++)t[r-1]=arguments[r];var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=n.environment,u=n.env,c=n.fallback,l=void 0===c?i.default.FALLBACK:c,f="string"==typeof n,s=(f?n:a||u||"").toLowerCase().trim(),d=f?t&&t[0]||i.default.FALLBACK:l;return o.default[s]||d};t.normalize=c,t.constants=i.default},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function a(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Object.defineProperty(t,"__esModule",{value:!0});var u=r(2),i=n(u),c=Object.keys(i.default).map(function(e){var t=o({},e,e);return i.default[e].forEach(function(r){return t[r]=e}),t}),l=Object.assign.apply(Object,[{}].concat(a(c)));t.default=l},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={local:["loc","localhost","sbx","sandbox"],development:["dev","develop"],integration:["build","ci","int","integ"],test:["qa","qal","quality","qualityassurance","quality-assurance","tst","testing"],"user-acceptance":["uat","useracceptance","user-acceptance","user-acceptance-testing"],staging:["stg","stage","perf","performance","preprod","pre-prod"],production:["prd","prod"]};t.default=r},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function a(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Object.defineProperty(t,"__esModule",{value:!0});var u=r(1),i=n(u),c=/[^\w\s]/gi,l=Object.keys(i.default).map(function(e){return o({},e.toUpperCase().replace(c,"_"),i.default[e])}),f=Object.assign.apply(Object,[{}].concat(a(l)));f.FALLBACK=i.default.production,t.default=f}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,